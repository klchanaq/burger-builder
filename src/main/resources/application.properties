# Enable H2 Console
spring.h2.console.enabled=true
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE

# Show All Queries
# Reminder: For both org.hibernate.type ( show parameter values ) & show-sql / hibernate.show_sql exist, two queries will show
# spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true

# Transaction Management Isolation Level 0 / 1 / 2 / 4 / 8
# spring.jpa.properties.hibernate.connection.isolation=4

# Show Hibernate Parameters Info.
logging.level.org.hibernate.type=trace

# Turn statistics on
# spring.jpa.properties.hibernate.generate_statistics=true
# logging.level.org.hibernate.stat=true

# debug mode ( no further understanding )
# Jhipster-dev & prod: not specific
# Optional
debug=true

# Spring Logging Level
# Need when necessary
# Ref: https://www.concretepage.com/spring-boot/spring-boot-logging-example
# Optional
# Jhipster-dev:
# logging:
#    level:
#        ROOT: DEBUG
#        io.github.jhipster: DEBUG
#        com.jhipsterprojects: DEBUG
# Jhipster-prod:
# logging:
#    level:
#        ROOT: INFO
#        com.jhipsterprojects: INFO
#        io.github.jhipster: INFO
# logging.level.root= WARN
# logging.level.org.springframework.security= DEBUG
# logging.level.org.springframework.web= ERROR
# logging.level.org.hibernate= DEBUG
# logging.level.org.apache.commons.dbcp2= DEBUG
# etc.

# for Dev
logging.level.ROOT= WARN
#logging.level.org.springframework.security= DEBUG
#logging.level.org.springframework.web= ERROR
#logging.level.org.hibernate= DEBUG

# Spring OpenSessionInViewFilter Configuration for Lazy-Loading inside Spring Java Code ( default is true )
# Lazy Loading Error: could not initialize proxy - no Session
# Will throw No Session / Lazy-Loading Exception except the method(s) marked with @Transactional e.g. at RestController
# Ref: https://blog.csdn.net/zhangjq520/article/details/53740971
# Jhipster-dev & prod: open-in-view = false
# [ Optional ]
# spring.jpa.open-in-view=true